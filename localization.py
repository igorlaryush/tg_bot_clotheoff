import os
import logging

logger = logging.getLogger(__name__)

# --- –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤ —Å–æ–≥–ª–∞—à–µ–Ω–∏–π ---
AGREEMENTS = {}
SUPPORTED_LANGUAGES = ['en', 'ru'] # –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ —è–∑—ã–∫–∏ —Å—é–¥–∞

def load_agreement_text(lang_code):
    try:
        filename = f"user_agreement_{lang_code}.txt"
        if os.path.exists(filename):
            with open(filename, 'r', encoding='utf-8') as f:
                return f.read()
        else:
            logger.warning(f"Agreement file not found: {filename}")
            return f"User agreement text for '{lang_code}' is missing."
    except Exception as e:
        logger.error(f"Failed to load agreement text for {lang_code}: {e}")
        return f"Error loading user agreement for '{lang_code}'."

for lang in SUPPORTED_LANGUAGES:
    AGREEMENTS[lang] = load_agreement_text(lang)

# --- –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ ---
# –ö–ª—é—á -> {—è–∑—ã–∫: —Ç–µ–∫—Å—Ç}
TEXTS = {
    # --- –û–±—â–µ–µ ---
    "error_occurred": {
        "en": "An error occurred. Please try again later.",
        "ru": "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
    },
    "processing_photo": {
        "en": "‚è≥ Processing your photo...",
        "ru": "‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à–µ —Ñ–æ—Ç–æ...",
    },
    "photo_sent_for_processing": {
        "en": "Photo sent for processing. Waiting for result...",
        "ru": "–§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É. –û–∂–∏–¥–∞—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç...",
    },
    "api_error": {
        "en": "‚ùå API Error: {status}. Could not send photo for processing. Details: {details}",
        "ru": "‚ùå –û—à–∏–±–∫–∞ API: {status}. –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É. –î–µ—Ç–∞–ª–∏: {details}",
    },
    "network_error": {
        "en": "‚ùå Network error connecting to processing service.",
        "ru": "‚ùå –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ —Å–µ—Ä–≤–∏—Å—É –æ–±—Ä–∞–±–æ—Ç–∫–∏.",
    },
    "unexpected_processing_error": {
        "en": "‚ùå An unexpected error occurred while processing your request.",
        "ru": "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.",
    },
     "result_caption": {
        "en": "‚úÖ Processed image (ID: {id_gen}).\nProcessing time: {time}s",
        "ru": "‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (ID: {id_gen}).\n–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {time}—Å",
    },
     "result_caption_no_time": {
        "en": "‚úÖ Processed image (ID: {id_gen}).",
        "ru": "‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (ID: {id_gen}).",
    },
    "processing_failed": {
        "en": "‚ùå Processing failed for image (ID: {id_gen}).\nReason: {reason}",
        "ru": "‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (ID: {id_gen}).\n–ü—Ä–∏—á–∏–Ω–∞: {reason}",
    },
    "failed_to_send_result": {
        "en": "Failed to deliver processing result for ID: {id_gen}. Error: {error}",
        "ru": "–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è ID: {id_gen}. –û—à–∏–±–∫–∞: {error}",
    },
    "error_getting_user_data": {
        "en": "Sorry, there was a problem accessing your user data. Please try again later.",
        "ru": "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ –≤–∞—à–∏–º –¥–∞–Ω–Ω—ã–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
    },
    "photo_download_error":{
        "en": "Could not download the photo.",
        "ru": "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ.",
    },

    # --- –°–æ–≥–ª–∞—à–µ–Ω–∏–µ –∏ —è–∑—ã–∫ ---
    "choose_language": {
        "en": "Please choose your language:",
        "ru": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —è–∑—ã–∫:",
    },
    "agreement_prompt": {
        "en": "Please review and accept the User Agreement to continue:",
        "ru": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å –∏ –ø—Ä–∏–º–∏—Ç–µ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –°–æ–≥–ª–∞—à–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è:",
    },
    "accept_button": {
        "en": "‚úÖ Accept",
        "ru": "‚úÖ –ü—Ä–∏–Ω—è—Ç—å",
    },
    "decline_button": {
        "en": "‚ùå Decline",
        "ru": "‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å",
    },
    "agreement_accepted": {
        "en": "Thank you! You can now use the bot. Send /help for instructions or /settings to configure options.",
        "ru": "–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /help –¥–ª—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –∏–ª–∏ /settings –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø—Ü–∏–π.",
    },
    "agreement_declined": {
        "en": "You have declined the User Agreement. You need to accept it to use this bot. Send /start again if you change your mind.",
        "ru": "–í—ã –æ—Ç–∫–ª–æ–Ω–∏–ª–∏ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –°–æ–≥–ª–∞—à–µ–Ω–∏–µ. –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –µ–≥–æ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start —Å–Ω–æ–≤–∞, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—Ç–µ.",
    },
    "must_accept_agreement": {
        "en": "You must accept the User Agreement first. Please check the message above or send /start.",
        "ru": "–°–Ω–∞—á–∞–ª–∞ –≤—ã –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–Ω—è—Ç—å –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –°–æ–≥–ª–∞—à–µ–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã—à–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start.",
    },
     "language_set": {
        "en": "Language set to English.",
        "ru": "–Ø–∑—ã–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ –†—É—Å—Å–∫–∏–π.",
    },

    # --- –°—Ç–∞—Ä—Ç –∏ –ü–æ–º–æ—â—å ---
    "start_message": {
        "en": "Hello {user_name}! Send me a photo containing a person, and I'll try to process it using Clothoff.io.\n\nUse /settings to change language or processing options.\n\n‚ö†Ô∏è **Disclaimer:** Use this bot responsibly and ethically.",
        "ru": "–ü—Ä–∏–≤–µ—Ç, {user_name}! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ —Å —á–µ–ª–æ–≤–µ–∫–æ–º, –∏ —è –ø–æ–ø—Ä–æ–±—É—é –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –µ–≥–æ —Å –ø–æ–º–æ—â—å—é Clothoff.io.\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /settings –¥–ª—è —Å–º–µ–Ω—ã —è–∑—ã–∫–∞ –∏–ª–∏ –æ–ø—Ü–∏–π –æ–±—Ä–∞–±–æ—Ç–∫–∏.\n\n‚ö†Ô∏è **–û—Ç–∫–∞–∑ –æ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏:** –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ –∏ —ç—Ç–∏—á–Ω–æ.",
    },
    "help_message": {
        "en": "Send me a photo with a person in it. I will send it to the Clothoff API for processing based on your /settings.\n"
              "You will receive the result back here once it's ready.\n\n"
              "**Important:**\n"
              "- Ensure the image clearly shows one person.\n"
              "- Processing can take some time.\n"
              "- Results depend on the Clothoff API's capabilities.\n"
              "- Use responsibly.",
        "ru": "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–æ—Ç–æ —Å —á–µ–ª–æ–≤–µ–∫–æ–º. –Ø –æ—Ç–ø—Ä–∞–≤–ª—é –µ–≥–æ –≤ Clothoff API –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –≤–∞—à–∏–º /settings.\n"
              "–í—ã –ø–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–¥–µ—Å—å, –∫–æ–≥–¥–∞ –æ–Ω –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤.\n\n"
              "**–í–∞–∂–Ω–æ:**\n"
              "- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —á–µ—Ç–∫–æ –≤–∏–¥–µ–Ω –æ–¥–∏–Ω —á–µ–ª–æ–≤–µ–∫.\n"
              "- –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è.\n"
              "- –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–≤–∏—Å—è—Ç –æ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π Clothoff API.\n"
              "- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ.",
    },

    # --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
    "settings_title": {
        "en": "‚öôÔ∏è Settings",
        "ru": "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
    },
    "settings_choose_option": {
        "en": "Select an option to configure:",
        "ru": "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:",
    },
    "settings_current_options": {
        "en": "Current Processing Options:",
        "ru": "–¢–µ–∫—É—â–∏–µ –æ–ø—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏:",
    },
    "option_language": {
        "en": "üåê Language",
        "ru": "üåê –Ø–∑—ã–∫",
    },
    "option_postprocessing": {
        "en": "‚ú® Post-processing",
        "ru": "‚ú® –ü–æ—Å—Ç–æ–±—Ä–∞–±–æ—Ç–∫–∞",
    },
    "option_age": {
        "en": "üéÇ Age",
        "ru": "üéÇ –í–æ–∑—Ä–∞—Å—Ç",
    },
    "option_breast_size": {
        "en": "üçí Breast Size",
        "ru": "üçí –†–∞–∑–º–µ—Ä –≥—Ä—É–¥–∏",
    },
    "option_body_type": {
        "en": "ü§∏ Body Type",
        "ru": "ü§∏ –¢–∏–ø —Ç–µ–ª–∞",
    },
    "option_butt_size": {
        "en": "üçë Butt Size",
        "ru": "üçë –†–∞–∑–º–µ—Ä —è–≥–æ–¥–∏—Ü",
    },
     "option_pose": {
        "en": "üßò Pose",
        "ru": "üßò –ü–æ–∑–∞",
    },
    "option_cloth": {
        "en": "üëô Cloth",
        "ru": "üëô –û–¥–µ–∂–¥–∞",
    },
    "option_not_set": {
        "en": "Not set",
        "ru": "–ù–µ –∑–∞–¥–∞–Ω–æ",
    },
    "choose_value_for": {
        "en": "Choose a value for {option_name}:",
        "ru": "–í—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è {option_name}:",
    },
    "setting_updated": {
        "en": "{option_name} updated to: {value}",
        "ru": "{option_name} –æ–±–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞: {value}",
    },
    "setting_reset": {
        "en": "{option_name} reset.",
        "ru": "{option_name} —Å–±—Ä–æ—à–µ–Ω–æ.",
    },
    "back_button": {
        "en": "¬´ Back",
        "ru": "¬´ –ù–∞–∑–∞–¥",
    },
    "reset_button": {
        "en": "Reset to default",
        "ru": "–°–±—Ä–æ—Å–∏—Ç—å",
    },
     "value_not_set": {
        "en": "Default",
        "ru": "–ü–æ —É–º–æ–ª—á.",
     }
}

# --- –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ ---
DEFAULT_LANG = 'en' # –Ø–∑—ã–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω

def get_text(key: str, lang_code: str = DEFAULT_LANG) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–ª—é—á–∞."""
    if not lang_code:
        lang_code = DEFAULT_LANG
    # –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –∑–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞
    lang_dict = TEXTS.get(key)
    if lang_dict:
        text = lang_dict.get(lang_code)
        if text:
            return text
        # –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∞ –Ω—É–∂–Ω–æ–º —è–∑—ã–∫–µ, –ø—Ä–æ–±—É–µ–º –Ω–∞ —è–∑—ã–∫–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        text_default = lang_dict.get(DEFAULT_LANG)
        if text_default:
             logger.debug(f"Text key '{key}' not found for lang '{lang_code}', using default '{DEFAULT_LANG}'.")
             return text_default
    # –ï—Å–ª–∏ –∫–ª—é—á –≤–æ–æ–±—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω
    logger.warning(f"Text key '{key}' not found in TEXTS.")
    return f"_{key}_" # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª—é—á –∫–∞–∫ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞

def get_agreement_text(lang_code: str) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞."""
    if not lang_code:
        lang_code = DEFAULT_LANG
    return AGREEMENTS.get(lang_code, AGREEMENTS.get(DEFAULT_LANG, "Missing agreement text."))
