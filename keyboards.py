from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from localization import get_text, SUPPORTED_LANGUAGES # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏ –∏ —Å–ø–∏—Å–æ–∫ —è–∑—ã–∫–æ–≤
import payments # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å –ø–ª–∞—Ç–µ–∂–µ–π

# --- –û–ø—Ü–∏–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ (–∫–∞–∫ –≤ config.py –∏–ª–∏ –∑–¥–µ—Å—å) ---
PROCESSING_OPTIONS = {
    "postprocessing": ["", "anime", "upscale"], # "" - –Ω–µ –≤—ã–±—Ä–∞–Ω–æ
    "age": ["", "18", "20", "30", "40", "50"],
    "breast_size": ["", "small", "normal", "big"],
    "body_type": ["", "skinny", "normal", "curvy", "muscular"],
    "butt_size": ["", "small", "normal", "big"],
    "pose": [ # –ò–∑ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        "", "Blowjob", "Doggy Style", "Cumshot", "Cumshot POV", "Shower Room",
        "Shibari", "Ahegao", "Ahegao cum", "Holding tits", "Missionary POV",
        "Cowgirl POV", "Anal Fuck", "Legs up presenting", "Spreading legs",
        "Tit Fuck", "TGirl", "Tits On Glass", "Christmas", "Winter 1"
    ],
    "cloth": [ # –ò–∑ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        "", "naked", "bikini", "lingerie", "sport wear", "bdsm", "latex",
        "teacher", "schoolgirl", "bikini leopard", "naked cum", "naked tatoo",
        "witch", "sexy witch", "sexy maid", "Christmas underwear", "pregnant",
        "cheerleader", "police", "secretary"
    ]
}

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ ---
def get_language_keyboard() -> InlineKeyboardMarkup:
    keyboard = [
        # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ñ–ª–∞–≥–∏ –∏–ª–∏ –ø–æ–ª–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —è–∑—ã–∫–æ–≤
        [InlineKeyboardButton("English üá¨üáß", callback_data="set_lang:en")],
        [InlineKeyboardButton("–†—É—Å—Å–∫–∏–π üá∑üá∫", callback_data="set_lang:ru")],
        # –î–æ–±–∞–≤—å—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö —è–∑—ã–∫–æ–≤ –∏–∑ SUPPORTED_LANGUAGES
    ]
    return InlineKeyboardMarkup(keyboard)

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è ---
def get_agreement_keyboard(lang: str) -> InlineKeyboardMarkup:
    keyboard = [
        [
            InlineKeyboardButton(get_text("accept_button", lang), callback_data="accept_terms:true"),
            InlineKeyboardButton(get_text("decline_button", lang), callback_data="decline_terms:true"),
        ]
    ]
    return InlineKeyboardMarkup(keyboard)

# --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ ---
def get_settings_main_keyboard(lang: str, current_options: dict) -> InlineKeyboardMarkup:
    keyboard = []

    # –ö–Ω–æ–ø–∫–∞ —Å–º–µ–Ω—ã —è–∑—ã–∫–∞
    keyboard.append([InlineKeyboardButton(get_text("option_language", lang), callback_data="show_settings_option:language")])

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –æ–ø—Ü–∏–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
    for option_key in PROCESSING_OPTIONS.keys():
        option_name = get_text(f"option_{option_key}", lang) # –ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –∏–º—è –æ–ø—Ü–∏–∏
        current_value = current_options.get(option_key, "")
        display_value = current_value if current_value else get_text("option_not_set", lang)
        button_text = f"{option_name}: {display_value}"
        keyboard.append([InlineKeyboardButton(button_text, callback_data=f"show_settings_option:{option_key}")])

    return InlineKeyboardMarkup(keyboard)


# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –æ–ø—Ü–∏–∏ ---
def get_option_value_keyboard(option_key: str, lang: str, current_value: str) -> InlineKeyboardMarkup:
    keyboard = []
    available_values = []

    if option_key == 'language':
        available_values = SUPPORTED_LANGUAGES
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —è–∑—ã–∫–∞
        for lang_code in available_values:
            # –ü—Ä–æ—Å—Ç–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–æ–¥ —è–∑—ã–∫–∞ –∏–ª–∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ñ–ª–∞–≥–∏/–ø–æ–ª–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è
            lang_name = lang_code.upper()
            # –û—Ç–º–µ—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫
            prefix = "‚úÖ " if lang_code == current_value else ""
            keyboard.append([InlineKeyboardButton(f"{prefix}{lang_name}", callback_data=f"set_lang:{lang_code}")]) # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ callback —á—Ç–æ –∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—ã–±–æ—Ä–µ
    else:
        available_values = PROCESSING_OPTIONS.get(option_key, [])
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ 2-3 –≤ —Ä—è–¥ –¥–ª—è –¥–ª–∏–Ω–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤
        row = []
        max_cols = 2 # –ù–∞–ø—Ä–∏–º–µ—Ä, –ø–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
        for value in available_values:
            display_text = value if value else get_text("value_not_set", lang) # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º "Default" –¥–ª—è –ø—É—Å—Ç–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
            prefix = "‚úÖ " if value == current_value else ""
            row.append(InlineKeyboardButton(f"{prefix}{display_text}", callback_data=f"set_setting:{option_key}:{value}"))
            if len(row) == max_cols:
                keyboard.append(row)
                row = []
        if row: # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∫–Ω–æ–ø–∫–∏, –µ—Å–ª–∏ –∏—Ö –º–µ–Ω—å—à–µ max_cols
            keyboard.append(row)

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å–±—Ä–æ—Å–∞, –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–Ω–µ –ø—É—Å—Ç–æ–µ)
        if current_value:
             keyboard.append([InlineKeyboardButton(get_text("reset_button", lang), callback_data=f"set_setting:{option_key}:")]) # –ü—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Å–±—Ä–æ—Å–∞

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
    keyboard.append([InlineKeyboardButton(get_text("back_button", lang), callback_data="back_to_settings:main")])

    return InlineKeyboardMarkup(keyboard)

# === –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–ª–∞—Ç–µ–∂–µ–π ===

def get_payment_packages_keyboard(lang: str) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –ø–∞–∫–µ—Ç–∞–º–∏ –¥–ª—è –ø–æ–∫—É–ø–∫–∏."""
    keyboard = []
    packages = payments.get_all_packages(lang)
    
    for package_id, package_info in packages.items():
        if package_info:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
            popular_mark = "üî• " if package_info.get('popular') else ""
            button_text = f"{popular_mark}{package_info['name']}"
            button_text += f"\n{package_info['photos']} —Ñ–æ—Ç–æ - ${package_info['price']}"
            
            keyboard.append([InlineKeyboardButton(
                button_text, 
                callback_data=f"buy_package:{package_id}"
            )])
    
    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –∏–ª–∏ "–û—Ç–º–µ–Ω–∞"
    keyboard.append([InlineKeyboardButton(
        get_text("back_button", lang), 
        callback_data="cancel_payment"
    )])
    
    return InlineKeyboardMarkup(keyboard)

def get_payment_confirmation_keyboard(package_id: str, lang: str) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏ –ø–∞–∫–µ—Ç–∞."""
    keyboard = [
        [InlineKeyboardButton(
            get_text("confirm_purchase", lang), 
            callback_data=f"confirm_purchase:{package_id}"
        )],
        [InlineKeyboardButton(
            get_text("back_to_packages", lang), 
            callback_data="show_packages"
        )],
        [InlineKeyboardButton(
            get_text("cancel_button", lang), 
            callback_data="cancel_payment"
        )]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_balance_keyboard(lang: str) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–æ–º."""
    keyboard = [
        [InlineKeyboardButton(
            get_text("buy_photos", lang), 
            callback_data="show_packages"
        )],
        [InlineKeyboardButton(
            get_text("payment_history", lang), 
            callback_data="show_payment_history"
        )],
        [InlineKeyboardButton(
            get_text("back_button", lang), 
            callback_data="back_to_main"
        )]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_payment_history_keyboard(lang: str, page: int = 0) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ –ø–ª–∞—Ç–µ–∂–µ–π."""
    keyboard = []
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    nav_row = []
    if page > 0:
        nav_row.append(InlineKeyboardButton(
            "‚¨ÖÔ∏è –ù–∞–∑–∞–¥", 
            callback_data=f"payment_history_page:{page-1}"
        ))
    
    nav_row.append(InlineKeyboardButton(
        "–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", 
        callback_data=f"payment_history_page:{page+1}"
    ))
    
    if nav_row:
        keyboard.append(nav_row)
    
    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –∫ –±–∞–ª–∞–Ω—Å—É"
    keyboard.append([InlineKeyboardButton(
        get_text("back_button", lang), 
        callback_data="show_balance"
    )])
    
    return InlineKeyboardMarkup(keyboard)
